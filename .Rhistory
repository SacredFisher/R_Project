citydf <- data.frame(City=city, Temp=temp)
citydf
citydf[City]
citydf[City,]
citydf(City,)
citydf.City
rownames(citydf, c("First","Second","Third","Fourth"))
citydf
citydf <- row.names=c("First", "Second", "Third", "Fourth")
rownames(citydf)
rownames(citydf) <-c("First","Second","Third","Fourth")
citydf
v <- 1:12
class(v)
citydf[,2]
citydf[2,]
class(citydf[2,])
class(citydf[,2])
class(citydf[,1])
citydf[,"City"]
class(citydf[,"City"])
citydf$Temp
citydf$Third
citydf
citydf$Third <- c("a","b","c","d")
citydf
citydfdf$City
citydf$City
citydf$City drop=F
citydf[citydf$Temp>76.5,]
quit
cls
clear
clear()
x_1 <- range(1,10)
x_1
x_1 <- c(1,2,3,4,5,6,7,8,9,10)
x_2 <- 2*x_1
x_1+x_2
x_1[1]
x_1[0]
x_1[1]
x_1[1]*x_1[3]
x_1 + c(1,2)
5/2
5%%2
(-3)**(5%/%2)
(5%/%2)
5%/%3
5%%3
5%3
5/3
city <- c("Seattle", "Chicago","Boston","Houston")
temp <- c(-1,-10,0,23)
citydf <- data.frame(city, temp, row.names = c('a','b','c','d'))
citydf
citydf['a']
citydf.a
citydf["city"]
citydf["city", "b"]
citydf["b", "city"]
city = as.factor(city)
city
city[1]
city[2]
city[4]
citydf <- dataframe(city, temp)
citydf <- data.frame(city, temp)
citydf
citydf[3,]
citydf[3,, drop=F]
citydf[,3, drop=F]
citydf[,2, drop=F]
citydf[,2, drop=T]
citydf[,2, drop=F]
citydf$temp
citydf$city
citydf["city", drop=F]
citydf["city"]
citydf["city", drop=T]
citydf["city"]
ave = mean(citydf$temp)
ave
citydf[citydf$temp > ave]
citydf$temp
citydf$temp > ave
citydf[citydftemp > ave]
citydf[citydf$temp > ave]
citydf[citydf$temp > ave,]
head(citydf)
citydf[citydf$temp >= -1,]
str(citydf)
summary(citydf)
type(summary(citydf))
summ= summary(citydf)
summ["city"]
summ[0]
summ[1]
summ[10]
order(citydf$temp)
cwd
dir
write.table(citydf, file+'my_data.csv',sep= ',', row.names=F)
write.table(citydf, file+'my_data.csv',sep= ',', row.names= F)
write.table(citydf, file='my_data.csv',sep= ',', row.names=F)
temp = c(78,74,50,104)
data = data.frame(city= city, temp = temp)
data
order(temp, decreasing=TRUE)
order(city, decreasing=TRUE)
order("city", decreasing=TRUE)
order(city, decreasing=TRUE)
order(data, decreasing=TRUE)
order(data["city"], decreasing=TRUE)
order(city, decreasing=TRUE)
data[,order(city, decreasing=TRUE)]
data[order(city, decreasing=TRUE)]
data[order(city, decreasing=TRUE),]
data1 = data[order(city, decreasing=TRUE),]
str(data1)
str(data)
data[order(city, decreasing=FALSE),]
Pet = data.frame(Species=c('dog','cat','dog',weight =c(20,10,40)))
Pet
Pet = data.frame(Species=c('dog','cat','dog', weight =c(20,10,40)))
Pet
Pet = data.frame(Species=c('dog','cat','dog'), weight = c(20,10,40))
Pet
iris
sapply(iris[,1:4], sd)
lapply(iris[,1:4], sd)
lapply(iris[,1:4], mean)
c(1,2,3,4,5)
c('1','2','3','4','5') + '1'
c('1','2','3','4','5') + 1
c('1','2','3','4','5')*3
c(1,2,3,4,5)+1
city
as.numeric(city)
install.packages('dplyr')
install.packages('ggplot2','rmarkdown','knitr','data.table')
install.packages('ggplot2')
install.packages('ggplot2')
install.packages('rmarkdown')
install.packages('knitr')
install.packages('data.table')
install.packages('tidyverse')
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
full_join(orbits, impacts, by=`Object Name`)
library(tidyverse)
getwd()
setwd('/home/srikar/Code/R_Project/')
getwd()
library(tidyverse)
orbits <- read_csv('orbits.csv')
impacts <- read_csv('impacts.csv')
inner_join(orbits, impacts, by=`Object Name`)
orbits$`Object Name`
set(orbits$`Object Name`)
to_set(orbits$`Object Name`)
impacts$`Object Name`[1]
sum(impacts$`Object Name`[1] == orbits$`Object Name`)
sum(impacts$`Object Name`[2] == orbits$`Object Name`)
orbits %>% filter(str_detect(`Object Name`, impacts$`Object Name`[1] ))
library(tidyverse)
load_txt('Temp.txt')
library(tidyverse)
read.table('Temp.txt')
read.delim('Temp.txt')
read.delim('Temp.txt')
getwd()
setwd('/home/srikar/Downloads/')
library(tidyverse)
read.delim('Temp.txt')
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp) ##Get univariate statistics
sd(temp$Body.Temp)
sd(temp$Heart.Rate)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp) ##Get univariate statistics
sd(temp$Body.Temp)
sd(temp$Heart.Rate)
sapply(temp, sd)
cor(temp$Body.Temp, temp$Heart.Rate)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp) ##Get univariate statistics
#sd(temp$Body.Temp)
#sd(temp$Heart.Rate)
sapply(temp, sd) #apply stdev to vars
cor(temp$Body.Temp, temp$Heart.Rate) #not a large correlation
cor(temp$Gender, temp$Heart.Rate)
hist(temp$Body.Temp, temp$Heart.Rate)
hist(temp$Body.Temp, prob = T)
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = TRUE)
lines(density(temp$Heart.Rate), col = "red")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "red")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "pink")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "pink")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
##Null Hyp is that 98.6 is a likely average temp, thus we're expecting a high p value
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
##Null Hyp is that 98.6 is a likely average temp, thus we're expecting a high p value
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
#what we get is that the p-value is very small. Thus, it is very unlikely that this null hypothesis should be accepted. 95% confidence that true mean is between 98.12=98.37
t.test(temp$Body.Temp ~ temp$Gender, alternative = "two.sided")
##two sample test, get temp over Gender sample space.
t.test(temp$Body.Temp ~ temp$Gender, alternative = "two.sided")
##two sample test, get temp over Gender sample space.
##two sample populations have different means.
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
var.test(temp$Heart.Rate[temp$Gender == "Female"],
temp$Heart.Rate[temp$Gender == "Male"],
alternative = "less")
temp %>% split(.$Gender)%>%
map(summary)
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
lines(density(temp$Heart.Rate), col = "blue")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
plot + hist(temp$Heart.Rate, prob = T)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
temp %>% ggplot(aes(x=Body.Temp)) +geom_histogram(aes(fill=Gender), bins=10, color='black', position = position_dodge(.7))
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
#temp %>% ggplot(aes(x=Body.Temp)) +geom_histogram(aes(fill=Gender), bins=10, color='black', position = position_dodge(.7))
#hist(temp$Heart.Rate, prob = T)
#lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
tank <- read_csv(`Shark Tank Companies.csv`)
getwd()
setwd('/home/srikar/Code/R_Project')
getwd()
library(tidyverse)
tank <- read_csv(`Shark Tank Companies.csv`)
library(tidyverse)
tank <- read_csv('Shark Tank Companies.csv')
tank.summary()
tank.summary()
summary(tank)
str(tank)
cor(tank)
cor(tank$deal,tank$askedFor)
cor(tank$deal)
cor(tank$deal,)
cor(tank$deal,cols(tank))
cor(tank$deal,tank$exchangeForStake)
tank %>% ggplot(aes(deal, askedFor)) + geom_point()
tank %>% ggplot(aes(askedFor, deal)) + geom_point()
tank %>% ggplot(aes(askedFor, deal)) + geom_bar()
tank %>% ggplot(aes(askedFor, fill = deal)) + geom_bar()
tank %>% ggplot() + geom_bar(aes(askedFor, fill = deal))
cor(tank$deal,tank$exchangeForStake)
cor(tank$deal, tank$valuation)
tank[c('askedFor','exchangeForStake','valuation')]
tank[c('askedFor','exchangeForStake','valuation')] %>% cor()
tank[c('askedFor','exchangeForStake','valuation')] %>% cor()
tank %>% ggplot(aes(askedFor, valuation)) + geom_point()
tank %>% ggplot(aes(category, deal)) +geom_bar()
tank %>% ggplot() +geom_bar(mapping = aes(x = category,y= sum(deal)))
tank %>% ggplot() +geom_bar(mapping = aes(x = category))
tank %>% ggplot() +geom_bar(mapping = aes(x = category), deal)
tank %>% ggplot() +geom_bar(mapping = aes(x = category), tank$deal)
tank$category
tank[tank$category[1]]['deal']
tank %>% filter(deal)
tank %>% filter(deal)[c("deal","category")]
tank %>% filter(deal)
tank %>% filter(deal) %>% select(c(category,deal))
tank %>% filter(deal) %>% select(c(category,deal)) %>% ggplot() + geom_bar(mapping = aes(x=category))
tank %>% filter(deal) %>% select(c(category,deal)) %>% summarise()
tank %>% filter(deal) %>% select(c(category,deal)) %>% summarise()
summary(tank)
tank %>% filter(deal) %>% select(c(category,deal)) %>% count(category)
tank %>% filter(deal) %>% select(c(category,deal)) %>% select(where(count(category)['n'] >5))
tank %>% filter(deal) %>% select(c(category,deal)) -> modtank
select(where(count(modtank$category)['n'] >5))
library(tidyverse)
select(where(count(modtank$category)['n'] >5))
modtank
count(modtank)
count(modtank,category)
tank %>% filter(deal) %>% select(c(category,deal)) -> modtank
count(modtank,category) -> countn
keep(countn$category, countn$n > 5)
keep(modtank, modtank$category in to_set(categories))
keep(modtank, modtank$category %in% to_set(categories))
keep(modtank, modtank$category %in% categories)
tank <- read_csv('Shark Tank Companies.csv')
summary(tank)
str(tank)
cor(tank$deal,tank$askedFor)
cor(tank$deal,tank$exchangeForStake)
cor(tank$deal, tank$valuation)
cor(tank$askedFor, tank$valuation)
tank[c('askedFor','exchangeForStake','valuation')] %>% cor()
tank %>% ggplot(aes(askedFor, valuation)) + geom_point()
tank %>% ggplot() +geom_bar(mapping = aes(x = category), tank$deal)
tank %>% filter(deal) %>% select(c(category,deal)) -> modtank
count(modtank,category) -> countn
keep(countn$category, countn$n > 5)->categories
keep(modtank, modtank$category %in% categories)
count(modtank,category) -> countn
keep(countn$category, countn$n > 5)->categories
keep(modtank, modtank$category %in% categories)
modtank$category[categories]
modtank[categories]
library(tidyverse)
library(plyr)
library(stringr)
library(RColorBrewer)
library(writexl)
library(data.table)
charts <- read_csv('charts.csv')
songs <- read_csv('song_data.csv')
coul <- colorRampPalette(brewer.pal(8, "PRGn"))(25)
#regularize name column
songs<-songs%>%dplyr::rename(song = song_name)
summary(charts)
summary(songs)
#gets peaks, ordered by rank. Gives top 10's for the past year until 2021, from 1990
charts <- charts %>% filter(`peak-rank` <= 100, date >= '1990-01-01')
summary(charts)
##Get chart for the 90's
chart_90 <- charts %>% filter(date < '2000-01-01')
summary(chart_90)
sum(ddply(chart_90, .(date), nrow)['V1'])
##Get Chart for 00's,
chart_00 <- charts %>% filter(date >= '2000-01-01' & date < '2010-01-01')
summary(chart_00)
sum(ddply(chart_90, .(date), nrow)['V1'])
##Get Chart for 10's
chart_10  <- charts %>% filter(date >= '2010-01-01' & date < '2020-01-01')
summary(chart_10)
sum(ddply(chart_90, .(date), nrow)['V1'])
##Get Chart for 20's (so far)
chart_20 <- charts %>% filter(date >= '2020-01-01')
summary(chart_20)
sum(ddply(chart_90, .(date), nrow)['V1'])
##90's Cleaning and NEDA
songlst_90 <- chart_90 %>% select(date, rank, `peak-rank`, song, artist, `weeks-on-board`) %>%
distinct(song)
#these songs need to be searched in the songs data now, since we have extracted them.
songlst_90
j90 <- full_join(chart_90,songs, by = "song") %>% distinct(song, artist , .keep_all =T)
j90 %>% select(`peak-rank`,`weeks-on-board`,acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
j90
##00's Clearning and NEDA
songlst_00 <-chart_00 %>% select(date, rank, `peak-rank`, song, artist, `weeks-on-board`) %>%
distinct(song)
j00<- full_join(chart_00,songs, by = "song") %>% distinct(song, artist , .keep_all =T)
j00 %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
##10's Clearing and NEDA
songlst_10 <-chart_10 %>% select(date, rank, `peak-rank`, song, artist, `weeks-on-board`) %>%
distinct(song)
j10<- full_join(chart_10,songs, by = "song") %>% distinct(song, artist , .keep_all =T)
j10 %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
##alternate approach
nuchart <- charts %>% filter(date >= '1997-08-31', rank<=5, `peak-rank`<=3) %>% distinct(song, artist, .keep_all = T) %>% left_join(songs, by = "song") %>% distinct(song, artist , .keep_all =T) %>%
select(date, rank, song, artist, `peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness) %>%
as.data.frame() %>% write_xlsx('/home/srikar/Code/R_Project/top.xlsx')
read_xlxs
library(readxl)
getwd()
read_excel('topfill.xlsx')
full<-read_excel('topfill.xlsx')
summary(full)
full<-read_excel('topfill.xlsx')
full %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness)
full<-read_excel('topfill.xlsx')
full %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#1997 to 2000
full %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
filter(date < '2000-01-01') %>% as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#1997 to 2000
full %>%  filter(date < '2000-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2000 to 2005
full %>%  filter(date >= '2000-01-01' & date<="2005-12-31") %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2005 to 2010
full %>%  filter(date < '2000-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2010 to 2015
full %>%  filter(date < '2000-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2005 to 2010
full %>%  filter(date >= '2006-01-01' & date <= "20010-12-31") %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2005 to 2010
full %>%  filter(date >= '2006-01-01' & date <= "2010-12-31") %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#1997 to 2000
full %>%  filter(date < '2000-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2000 to 2005
full %>%  filter(date >= '2000-01-01' & date<="2005-12-31") %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2005 to 2010
full %>%  filter(date >= '2006-01-01' & date <= "2010-12-31") %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2010 to 2015
full %>%  filter(date >= '2011-01-01' & date <= '2015-12-31') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2015 to 2021
full %>% filter(date >= '2016-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
#2015 to 2021
full %>% filter(date >= '2016-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap()
#2015 to 2021
full %>% filter(date >= '2016-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs") %>% heatmap(col = coul)
full %>%  filter(date < '2000-01-01') %>% select(`peak-rank`, `weeks-on-board`, acousticness,danceability,energy,instrumentalness,liveness,loudness, tempo, speechiness, happiness) %>%
as.matrix() %>% cor(use="complete.obs")
library(ggpubr)
install.packages(ggpubr)
install.packages('ggpubr')
library(ggpubr)
library(rstatix)
install.packages('rstatix')
library(ggpubr)
library(rstatix)
#1997 to 2000
#Find Average stats
full %>%  filter(date < '2000-01-01') %>% group_by(`peak-rank`) %>% get_summary_stats(type="mean_sd")
installed.packages('rstatix')
install.packages('rstatix')
