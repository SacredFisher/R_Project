x[c(0,-2,0,1)]
v= 10:15
names(v) = c("a","b","c","d","e")
names(v)
v('a')
v["a"]
v[2]
v[:]
v[-1]
v[v<=13 & v%2=0]
v[v<=13 & v%2==0]
v[v<=13]
v[v<=13 & v>11.5]
v[v<=13 &  class(v) is int]
v[v<=13 & v%%2==0]
summary(v)
ls()
clear x
del(x)
rm(x)
mmat = matrix(10:24, 4,4)
mmat = matrix(10:26, 4,4)
mmat = matrix(10:24, 4,4)
mmat = matrix(10:36, 4,4)
mmat = matrix(10:34, 4,4)
mmat = matrix(10:33, 4,4)
mmat
mmat = matrix(10:30, 4,4)
mmat = matrix(10:29, 4,4)
mmat
mmat[1,3]
mmat[2,2]
my_mat = matrix(10-110,10,10)
my_mat
my_mat = matrix(10:110,10,10)
my_mat = matrix(9:110,10,10)
my_mat = matrix(11:110,10,10)
my_mat
my_mat2 = matrix(1:12,4,3)
my_mat2
v <- 1:12
dim(v)
dim(v)<-c(4,3)
dim(v)
v
my_mat
my_mat = matrix(11:110,10,10)
my_mat
my_mat2 = matrix(1:12, 4, 3)
my_mat2
v <- 1:12
v
dim(v)
dim(my_mat)
dim(my_mat2)
dim(v)<-c(4,3)
v
vec1 <- 1:4
vec2 <-5:8
vec3 <-9:12
cbind(vec1,vec2,vec3)
rbind(vec1,vec2,vec3)
my_mat[2,5]
my_mat[10,]
my_mat[1,:]
my_mat[1,]
my_mat[,]
my_mat[3,2]
my_mat[(i%%2=0 == True), ]
my_mat[(i%%2=0 == TRUE), ]
my_mat[(i%%2=0 == TRUE), ]
i=0
my_mat[(i%%2=0 == TRUE), ]
10%%2
10%%3
v
v[-1,]
v[-1:0,]
v[-1:3,]
v[-1,3]
dim(v[-1,3])
v
dim(v)<-NULL
v
dim(v)<-1
dim(v)<-c(1,12)
v
dim(v)<-1
dim(v)<-c(4,3)
v
v[-1,3,drop=F]
v[-1,3]
dim(v[-1,3])
dim(v[-1,3, drop=F])
d = c(3,4)
d
a <- array(1:24, dim=c(3,4,2))
a
b<- array(1:24. dim=c(2,2,2,3))
b<- array(1:24, dim=c(2,2,2,3))
b
my_mat <- matrix(1:9,3,3)
my_mat2 <- matrix(1:9,3,3, byrow=T)
my_mat
my_mat2
v1= my_mat2[1,] ; v2= my_mat2[,2]
v1*v2
m1 = my_mat2[1,,drop=F] ; m2 = my_mat2[,2,drop=F]
m1
m2
m1*m2
m1 dot m2
m1*m2
m1%*%m2
frame
clear values
rm
rm()
rm(ls)
rm(ls())
rm(list=ls())
city = c("Seattle", "Chicago","Boston","Houston")
temp = c(78,74,50,104)
citydf <- data.frame(city=city, temp=temp)
citydf
citydf <- data.frame(City=city, Temp=temp)
citydf
citydf[City]
citydf[City,]
citydf(City,)
citydf.City
rownames(citydf, c("First","Second","Third","Fourth"))
citydf
citydf <- row.names=c("First", "Second", "Third", "Fourth")
rownames(citydf)
rownames(citydf) <-c("First","Second","Third","Fourth")
citydf
v <- 1:12
class(v)
citydf[,2]
citydf[2,]
class(citydf[2,])
class(citydf[,2])
class(citydf[,1])
citydf[,"City"]
class(citydf[,"City"])
citydf$Temp
citydf$Third
citydf
citydf$Third <- c("a","b","c","d")
citydf
citydfdf$City
citydf$City
citydf$City drop=F
citydf[citydf$Temp>76.5,]
quit
cls
clear
clear()
x_1 <- range(1,10)
x_1
x_1 <- c(1,2,3,4,5,6,7,8,9,10)
x_2 <- 2*x_1
x_1+x_2
x_1[1]
x_1[0]
x_1[1]
x_1[1]*x_1[3]
x_1 + c(1,2)
5/2
5%%2
(-3)**(5%/%2)
(5%/%2)
5%/%3
5%%3
5%3
5/3
city <- c("Seattle", "Chicago","Boston","Houston")
temp <- c(-1,-10,0,23)
citydf <- data.frame(city, temp, row.names = c('a','b','c','d'))
citydf
citydf['a']
citydf.a
citydf["city"]
citydf["city", "b"]
citydf["b", "city"]
city = as.factor(city)
city
city[1]
city[2]
city[4]
citydf <- dataframe(city, temp)
citydf <- data.frame(city, temp)
citydf
citydf[3,]
citydf[3,, drop=F]
citydf[,3, drop=F]
citydf[,2, drop=F]
citydf[,2, drop=T]
citydf[,2, drop=F]
citydf$temp
citydf$city
citydf["city", drop=F]
citydf["city"]
citydf["city", drop=T]
citydf["city"]
ave = mean(citydf$temp)
ave
citydf[citydf$temp > ave]
citydf$temp
citydf$temp > ave
citydf[citydftemp > ave]
citydf[citydf$temp > ave]
citydf[citydf$temp > ave,]
head(citydf)
citydf[citydf$temp >= -1,]
str(citydf)
summary(citydf)
type(summary(citydf))
summ= summary(citydf)
summ["city"]
summ[0]
summ[1]
summ[10]
order(citydf$temp)
cwd
dir
write.table(citydf, file+'my_data.csv',sep= ',', row.names=F)
write.table(citydf, file+'my_data.csv',sep= ',', row.names= F)
write.table(citydf, file='my_data.csv',sep= ',', row.names=F)
temp = c(78,74,50,104)
data = data.frame(city= city, temp = temp)
data
order(temp, decreasing=TRUE)
order(city, decreasing=TRUE)
order("city", decreasing=TRUE)
order(city, decreasing=TRUE)
order(data, decreasing=TRUE)
order(data["city"], decreasing=TRUE)
order(city, decreasing=TRUE)
data[,order(city, decreasing=TRUE)]
data[order(city, decreasing=TRUE)]
data[order(city, decreasing=TRUE),]
data1 = data[order(city, decreasing=TRUE),]
str(data1)
str(data)
data[order(city, decreasing=FALSE),]
Pet = data.frame(Species=c('dog','cat','dog',weight =c(20,10,40)))
Pet
Pet = data.frame(Species=c('dog','cat','dog', weight =c(20,10,40)))
Pet
Pet = data.frame(Species=c('dog','cat','dog'), weight = c(20,10,40))
Pet
iris
sapply(iris[,1:4], sd)
lapply(iris[,1:4], sd)
lapply(iris[,1:4], mean)
c(1,2,3,4,5)
c('1','2','3','4','5') + '1'
c('1','2','3','4','5') + 1
c('1','2','3','4','5')*3
c(1,2,3,4,5)+1
city
as.numeric(city)
install.packages('dplyr')
install.packages('ggplot2','rmarkdown','knitr','data.table')
install.packages('ggplot2')
install.packages('ggplot2')
install.packages('rmarkdown')
install.packages('knitr')
install.packages('data.table')
install.packages('tidyverse')
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
full_join(orbits, impacts, by=`Object Name`)
library(tidyverse)
getwd()
setwd('/home/srikar/Code/R_Project/')
getwd()
library(tidyverse)
orbits <- read_csv('orbits.csv')
impacts <- read_csv('impacts.csv')
inner_join(orbits, impacts, by=`Object Name`)
orbits$`Object Name`
set(orbits$`Object Name`)
to_set(orbits$`Object Name`)
impacts$`Object Name`[1]
sum(impacts$`Object Name`[1] == orbits$`Object Name`)
sum(impacts$`Object Name`[2] == orbits$`Object Name`)
orbits %>% filter(str_detect(`Object Name`, impacts$`Object Name`[1] ))
library(tidyverse)
load_txt('Temp.txt')
library(tidyverse)
read.table('Temp.txt')
read.delim('Temp.txt')
read.delim('Temp.txt')
getwd()
setwd('/home/srikar/Downloads/')
library(tidyverse)
read.delim('Temp.txt')
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp) ##Get univariate statistics
sd(temp$Body.Temp)
sd(temp$Heart.Rate)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp) ##Get univariate statistics
sd(temp$Body.Temp)
sd(temp$Heart.Rate)
sapply(temp, sd)
cor(temp$Body.Temp, temp$Heart.Rate)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
summary(temp) ##Get univariate statistics
#sd(temp$Body.Temp)
#sd(temp$Heart.Rate)
sapply(temp, sd) #apply stdev to vars
cor(temp$Body.Temp, temp$Heart.Rate) #not a large correlation
cor(temp$Gender, temp$Heart.Rate)
hist(temp$Body.Temp, temp$Heart.Rate)
hist(temp$Body.Temp, prob = T)
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = TRUE)
lines(density(temp$Heart.Rate), col = "red")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "red")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "pink")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "pink")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
##Null Hyp is that 98.6 is a likely average temp, thus we're expecting a high p value
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
##Null Hyp is that 98.6 is a likely average temp, thus we're expecting a high p value
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
#what we get is that the p-value is very small. Thus, it is very unlikely that this null hypothesis should be accepted. 95% confidence that true mean is between 98.12=98.37
t.test(temp$Body.Temp ~ temp$Gender, alternative = "two.sided")
##two sample test, get temp over Gender sample space.
t.test(temp$Body.Temp ~ temp$Gender, alternative = "two.sided")
##two sample test, get temp over Gender sample space.
##two sample populations have different means.
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
var.test(temp$Heart.Rate[temp$Gender == "Female"],
temp$Heart.Rate[temp$Gender == "Male"],
alternative = "less")
temp %>% split(.$Gender)%>%
map(summary)
hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
lines(density(temp$Heart.Rate), col = "blue")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
plot + hist(temp$Heart.Rate, prob = T)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
temp %>% ggplot(aes(x=Body.Temp)) +geom_histogram(aes(fill=Gender), bins=10, color='black', position = position_dodge(.7))
hist(temp$Heart.Rate, prob = T)
lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
plot<-hist(temp$Body.Temp, prob = T)
lines(density(temp$Body.Temp), col = "red")
#temp %>% ggplot(aes(x=Body.Temp)) +geom_histogram(aes(fill=Gender), bins=10, color='black', position = position_dodge(.7))
#hist(temp$Heart.Rate, prob = T)
#lines(density(temp$Heart.Rate), col = "blue")
#bivariate case
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "red")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "red")
# scatter plot
plot(temp$Body.Temp, temp$Heart.Rate, col = temp$Gender)
tank <- read_csv(`Shark Tank Companies.csv`)
getwd()
setwd('/home/srikar/Code/R_Project')
getwd()
library(tidyverse)
tank <- read_csv(`Shark Tank Companies.csv`)
library(tidyverse)
tank <- read_csv('Shark Tank Companies.csv')
tank.summary()
tank.summary()
summary(tank)
str(tank)
cor(tank)
cor(tank$deal,tank$askedFor)
cor(tank$deal)
cor(tank$deal,)
cor(tank$deal,cols(tank))
cor(tank$deal,tank$exchangeForStake)
tank %>% ggplot(aes(deal, askedFor)) + geom_point()
tank %>% ggplot(aes(askedFor, deal)) + geom_point()
tank %>% ggplot(aes(askedFor, deal)) + geom_bar()
tank %>% ggplot(aes(askedFor, fill = deal)) + geom_bar()
tank %>% ggplot() + geom_bar(aes(askedFor, fill = deal))
cor(tank$deal,tank$exchangeForStake)
cor(tank$deal, tank$valuation)
tank[c('askedFor','exchangeForStake','valuation')]
tank[c('askedFor','exchangeForStake','valuation')] %>% cor()
tank[c('askedFor','exchangeForStake','valuation')] %>% cor()
tank %>% ggplot(aes(askedFor, valuation)) + geom_point()
tank %>% ggplot(aes(category, deal)) +geom_bar()
tank %>% ggplot() +geom_bar(mapping = aes(x = category,y= sum(deal)))
tank %>% ggplot() +geom_bar(mapping = aes(x = category))
tank %>% ggplot() +geom_bar(mapping = aes(x = category), deal)
tank %>% ggplot() +geom_bar(mapping = aes(x = category), tank$deal)
tank$category
tank[tank$category[1]]['deal']
tank %>% filter(deal)
tank %>% filter(deal)[c("deal","category")]
tank %>% filter(deal)
tank %>% filter(deal) %>% select(c(category,deal))
tank %>% filter(deal) %>% select(c(category,deal)) %>% ggplot() + geom_bar(mapping = aes(x=category))
tank %>% filter(deal) %>% select(c(category,deal)) %>% summarise()
tank %>% filter(deal) %>% select(c(category,deal)) %>% summarise()
summary(tank)
tank %>% filter(deal) %>% select(c(category,deal)) %>% count(category)
tank %>% filter(deal) %>% select(c(category,deal)) %>% select(where(count(category)['n'] >5))
tank %>% filter(deal) %>% select(c(category,deal)) -> modtank
select(where(count(modtank$category)['n'] >5))
library(tidyverse)
select(where(count(modtank$category)['n'] >5))
modtank
count(modtank)
count(modtank,category)
tank %>% filter(deal) %>% select(c(category,deal)) -> modtank
count(modtank,category) -> countn
keep(countn$category, countn$n > 5)
keep(modtank, modtank$category in to_set(categories))
keep(modtank, modtank$category %in% to_set(categories))
keep(modtank, modtank$category %in% categories)
tank <- read_csv('Shark Tank Companies.csv')
summary(tank)
str(tank)
cor(tank$deal,tank$askedFor)
cor(tank$deal,tank$exchangeForStake)
cor(tank$deal, tank$valuation)
cor(tank$askedFor, tank$valuation)
tank[c('askedFor','exchangeForStake','valuation')] %>% cor()
tank %>% ggplot(aes(askedFor, valuation)) + geom_point()
tank %>% ggplot() +geom_bar(mapping = aes(x = category), tank$deal)
tank %>% filter(deal) %>% select(c(category,deal)) -> modtank
count(modtank,category) -> countn
keep(countn$category, countn$n > 5)->categories
keep(modtank, modtank$category %in% categories)
count(modtank,category) -> countn
keep(countn$category, countn$n > 5)->categories
keep(modtank, modtank$category %in% categories)
modtank$category[categories]
modtank[categories]
